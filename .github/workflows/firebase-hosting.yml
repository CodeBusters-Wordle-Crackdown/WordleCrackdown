name: Deploy to Firebase Hosting

on:
  push:
    branches:
      - root-dev
      - root-test
      - root-main

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout repository content
        uses: actions/checkout@v2

      # Step 2: Set up Node.js environment (if needed)
      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'  # Specify the Node.js version to be used

      # Step 3: Install Firebase CLI
      - name: Install Firebase CLI
        run: npm install -g firebase-tools

      # Step 4: Set up Firebase service account for authentication
      - name: Authenticate to Firebase using service account
        run: |
          # Save the service account JSON to a file
          echo "${{ secrets.FIREBASE_SERVICE_ACCOUNT_CODE_BUSTERS_14D33 }}" > "${HOME}/firebase-service-account.json"
          # Authenticate using the service account JSON
          gcloud auth activate-service-account --key-file="${HOME}/firebase-service-account.json"
        env:
          FIREBASE_SERVICE_ACCOUNT_CODE_BUSTERS_14D33: ${{ secrets.FIREBASE_SERVICE_ACCOUNT_CODE_BUSTERS_14D33 }}

      # Step 5: Run build.sh script if it exists (optional step)
      - name: Run build.sh
        run: |
          if [ -f build.sh ]; then
            chmod +x build.sh
            ./build.sh
          else
            echo "build.sh not found, skipping build step."
          fi

      # Step 6: Deploy to Firebase Hosting using the service account
      - name: Deploy to Firebase Hosting
        run: firebase deploy --only hosting --project ${{ secrets.FIREBASE_PROJECT_ID }}
        env:
          GOOGLE_APPLICATION_CREDENTIALS: "${HOME}/firebase-service-account.json"
